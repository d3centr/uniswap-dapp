package fyi.dap.uniswap

case class Token(symbol: String, decimals: BigInt, address: String)

case class Base(poolAddress: String, price: String, is1: java.lang.Boolean, logId: BigDecimal)
object Base { def apply(r: ExchangeRateRow): Base = Base(r.address, r.price1, r.is1, r.logId) }

case class SwapPriceVolumeRow(
    address: String,
    blockNumber: Long,
    transactionHash: Array[Byte],
    event: String,
    logIndex: Long,
    transactionIndex: Long,
    blockHash: Array[Byte],
    contract: String,
    epoch: Int,
    amount0: String,
    amount1: String,
    liquidity: String,
    recipient: String,
    sender: String,
    sqrtPriceX96: String,
    tick: Long,
    timestamp: Long,
    gas: Long,
    gasPrice: String,
    baseFeePerGas: String,
    gasFees: String,
    tip: String,
    pool: String,
    fee: Long,
    tickSpacing: Long,
    token0: Token,
    token1: Token,
    logId: BigDecimal,
    price1: String,
    price0: String,
    resolvedSqrtPrice: java.lang.Double,  // scala.Double isn't nullable
    fee0: String,
    fee1: String,
    netAmount0: String,
    netAmount1: String,
    volume0: String,
    volume1: String
)

case class ExchangeRateRow(
    address: String,
    blockNumber: java.lang.Long,
    transactionHash: Array[Byte],
    event: String,
    logIndex: java.lang.Long,
    transactionIndex: java.lang.Long,
    blockHash: Array[Byte],
    contract: String,
    epoch: Integer,
    amount0: String,
    amount1: String,
    liquidity: String,
    recipient: String,
    sender: String,
    sqrtPriceX96: String,
    tick: java.lang.Long,
    timestamp: java.lang.Long,
    gas: java.lang.Long,
    gasPrice: String,
    baseFeePerGas: String,
    gasFees: String,
    tip: String,
    pool: String,
    fee: java.lang.Long,
    tickSpacing: java.lang.Long,
    token0: Token,
    token1: Token,
    logId: BigDecimal,
    price1: String,
    price0: String,
    resolvedSqrtPrice: java.lang.Double,
    fee0: String,
    fee1: String,
    netAmount0: String,
    netAmount1: String,
    volume0: String,
    volume1: String,
    tickAmount0: java.lang.Double,
    tickAmount1: java.lang.Double,
    tickDepth0: java.lang.Double,
    tickDepth1: java.lang.Double,
    isBasePool: java.lang.Boolean,
    is1: java.lang.Boolean,
    pairedToken: Token,
    pairedToken0: Token,
    pairedToken1: Token,
    blockNumberTs: java.sql.Timestamp,
    lastPrice0: String,
    lastPrice1: String,
    priceDelta0: String,
    priceDelta1: String,
    priceDeltaPct0: java.lang.Double,
    priceDeltaPct1: java.lang.Double,
    tickDelta: java.lang.Long,
    base0: Base,
    base1: Base,
    usdBase: Base
)

